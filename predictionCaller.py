#!/usr/bin/env python3

global python2AbsolutePath; global python2LibPath
python2AbsolutePath = "/u/local/apps/python/2.7.2/bin/python"
python2LibPath = "/u/local/apps/python/2.7.2/lib"

def run(model, *data):  #model should be the name of the predictive model, case insensitive.  Data should be a list or a pair of lists.  Probably should also include handling for strings when a single sequence is passed.
    import sys
    import os
    import subprocess
    import json
    data = list(data)
    if not model.upper() in ("AZIMUTH","ELEVATION","AGGREGATION"):
        raise PredictionError("Invalid model specified. Specified model: %s" %(model))
    if not len(data) > 0:
        raise PredictionError("No data passed for prediction.  Data: %s" %(data))
    if model.upper() == "AZIMUTH" and not len(data) == 1:
        raise PredictionError("Azimuth predictions take exactly 1 list for data. %s lists were passed. Data: %s" %(len(data), data))
    elif model.upper() == "ELEVATION":
        if not len(data) == 2:
            raise PredictionError("Elevation prediction takes exactly 2 lists for data. List count: %s. Data: %s" %(len(data), data))
    elif model.upper() == "AGGREGATION":
        if not len(data) == 3:
            raise PredictionError("Aggregation prediction takes exactly 3 lists for data. List count: %s. Data: %s" %(len(data), data))
    for i in range(0,len(data)):
        if type(data[i]) == str:
            data[i] = [data[i]]
        elif not type(data[i]) == list:
            raise PredictionError("Data elements should be passed as lists (strings acceptable for single sequences). Data element %s was of type %s. Data: %s" %(i, type(data[i], data)))
    for i in range(0,len(data)):
        data[i] = [str(element) for element in data[i]]  #make sure every element of the list is now a string
        data[i] = ",".join(data[i])  #and join them together with commas
    oldLD = os.environ['LD_LIBRARY_PATH']
    tempLD = oldLD.split(":")
    tempLD.append(python2LibPath)
    os.environ['LD_LIBRARY_PATH'] = ":".join(tempLD)
    commandList = [python2AbsolutePath, "predictionWrapper.py", model]
    dataString = " ".join(data)
    predictionWrapper = subprocess.Popen(commandList, stderr=subprocess.PIPE, stdin=subprocess.PIPE) #, shell = True) # stdout = subprocess.PIPE)
    predictionOutput = predictionWrapper.communicate(dataString.encode())[1].decode()
    #print(predictionOutput)
    try:
        start = predictionOutput.index("<BEGIN_RESULTS>") + 15
        end = predictionOutput.index("<END_RESULTS>")
    except ValueError:
        os.environ['LD_LIBRARY_PATH'] = ":".join(oldLD)
        raise PredictionError("Unable to find data outputs from predictionWrapper.  Output: " %(predictionOutput))
    #print(start)
    #print(end)
    #print(predictionOutput[start:end])
    if start == end:
        os.environ['LD_LIBRARY_PATH'] = ":".join(oldLD)
        return None
    result = predictionOutput[start:end]
    # result = result.split(",")
    try:
        result = json.loads(result)
    except ValueError:
        os.environ['LD_LIBRARY_PATH'] = ":".join(oldLD)
        raise ValueError("Error converting returned prediction values to floats.  Unable to convert '%s'." %(result))
    #print(result)
    os.environ['LD_LIBRARY_PATH'] = ":".join(oldLD)
    return result

class PredictionError(Exception):
    
    def __init__(self, message):
        self.message = message
        
    def __str__(self):
        return repr(self.message)
    
def testCases():
    print("Azimuth")
    azimuthTestData = "GGGGATGCATGCATGCATGCATGCAGGAAA,AAAAATGCATGCATGCATGCATGCAGGGGG,GGGGATGCACGGATGCATGCATGCAGGAAA,GGGGATGCATGGGAGCATGCATGCAGGAAA,GGGGATGCATGCATGCAATGCTGCAGGAAA"
    azimuthTestData = azimuthTestData.split(",")
    print(run("Azimuth", azimuthTestData))
    print("Elevation")
    onTarget = bigTarget
    #offTargets = bigOffTarget
    offTargets = bigOffTarget + "," + bigOffTarget + "," + bigOffTarget + "," + bigOffTarget + "," + bigOffTarget + "," + bigOffTarget + "," + bigOffTarget + "," + bigOffTarget + "," + bigOffTarget + "," + bigOffTarget
    #onTarget = "ATGCATGCATGCATGCATGCAGG"
    #offTargets = "ATGCATGCATGCTTGCATGCAGG,ATGCATCAATGCATGCATGCAGG,ATGCATGCATGCATGCGTGCAGG,ATGCATGCATGAATGCATGCAGG,ATGCATGCATGCATTCATGCAGG,ATGCCTGCATGCATGCATGCAGG,ATGCATAAATGCATGCATGCAGG,ATGCATGCATGCATGCATTTAGG,ATGCATGCACATATGCATGCAGG"
    offTargets = offTargets.split(",")
    print(run("Elevation", onTarget, offTargets))
    print("Aggregation")
    stackers = "0.1,0.2,0.03"
    scores = "0.05,0.06,0.07"
    genicValues = "True,False,False"
    stackers = stackers.split(",")
    scores = scores.split(",")
    genicValues = genicValues.split(",")
    print(run("Aggregation", stackers, scores, genicValues))

if __name__ == '__main__':
    global bigTarget
    global bigOffTarget
    bigTarget = "GAAGGCGGACATGCGGCGCCAGG"
    bigOffTarget = "CGGGGCAGAAACGCGGCGCCCTG,GCCGGCGGACACGGGGCTCCAGA,CAGGGCGGAAATGCAGGGCCGGG,GGAGGCGCACGTGCTGCGCCAGC,CCCGGCAGCCATGCGGCGTCGGC,GGCGGCGGCCAGGCGGAGCCGGA,AAAGGCGCACATGCGGCCTCGCG,CGAGGAGGACATGCGTCGCACTG,GCGGGTGGACATGGGGCGCGGGT,CAAGGTGGACACGCTGCGCCTGG,ACAGGCGGCCATGCAGCTCCTGG,TCAGGTGGACATACGGCGCTCTG,GGGGGCGGAGCTGCGGGGCCGCG,ACCTGCGGACCTGCGCCGCCTGT,AGCGGTGGACGTGCGGCGCAGGT,GCGGGCGGACTGGCGGCGCTGCG,GCAGGCGGACCCTCGGCGCCCTG,TGAGGGGGCCATGAGGCGCCCTG,CGGGGCGGGCACTCGGCGCCCGG,ACAGGTGGACATGAGGCCCCAGG,CGAGGAGGACATGCAGCCCCTCG,ATAGGTGGACATGGGGCACCAGA,CAAGGCGGACATCTGGAGCCCTG,GGAGGAGGACAAGCGGCGGCGGC,CCTGGTGGACACGCGGCGCTCCG,TAAGGCGGACATAGGGCTCCAGC,ACCGACGGACATGGGGCTCCGGA,TCAGGTGGACATGTGGGGCCAGC,GGCGGCGGCCATGCTGGGCCCCG,GGTGGCGGAGCTGCGGTGCCTGG,AGCGGCGGAGAAGCGGCTCCGGA,TGAGGAGGACATGCGTCGCCCTG,GATGGTGGACAAGCGGCGCTTTG,GGCGGCGGACAGGCGGGGCGCAG,TGGGGAGGACATGCGTCACCCTG,TGTGGGGGACATCCAGCGCCTGG,CGAAGCGGACATGCCCCGCCTGG,TGAGGAGGACATGCATCGCCCTG,TCAGAGGGACATGCGGCTCCCAG,CATGGCAGAAATGCGGAGCCCTG,AGCGGAGGGCATGTGGCGCCAGC,GGAGGGGGACCTGCGGCGGCTGG,CAGGGCGGACTTGGGGCGGCTGT,CCCAGCGTACTTGCGGCGCCTAG,GACGGGCGACCTGCGGCGCCAGG,GGAGGCCGACATGCGGGGCAAGG,CCAGTGGGACATGCGGCTCCAGC,GGCGGCGGCTGTGCGGCGCCGCG,CCCGGTGGGCATGCGGCGGCAGC,GCGGGCGGGCAGGCGGCGCGGAG,CGGGGCGGGCAGGCGGCGGCAAG,ACTGGCGGACAGGAGGAGCCAGA,CGAGGTGCACCTGCGGCGCCAGG,CAGCTCGGAAATGCGGCGCCGGG,CGGGGCTGACGTGGGGCGCCAAG,CAAGCCGGCCATCCGGCGCCTTG,AGGCGCGGCCATGCAGCGCCGAG,GCCGGGGGCCATGCGGGGCCAGG,AGGGGCGGCCGTGAGGCGCCGGT,GCCGGCGGACGCGCGGCGGCGGC,ACCGGCGGCCATGCAGCCCCGGG,GAGGGTGGACATGGGGGGCCCTG,AGAGGAGGCCATGGGGCGCCTGG,TCGGGCGGACAGGCGGCCGCCGC,GGTGGAGGAAATGCGGAGCCGCG,CAGGGCGGAGCGGCGGCGCCGCG,GTGGGGGGACTTGCGGCGCGGTG,GCCGGCAGCCATGCGGCCCCCGC,CCGTGCGGACAGGGGGCGCCCGC,GAGGGCCGGCATGCGGGGCCCGG,GGAGGCGCACATGGGGGGCCTGG,GGAGGCGGACCTGCAGCTCCGGT,CCGGGCGAGCATGGGGCGCCTGG,CCGGGAGGAAATGAGGCGCCAGA,GTGGGGGGACAGGCTGCGCCTGC,ACAGGCTGACAGGCGGCGGCAGC,GGTGGCGGACATGGGGCGTTCGG,ACAGGCGCAACTGCGGCGCCCGC,CTGGGCGGACTTGTGGCGACATG,GAAGGCAGACAGGCGGGGCCGGT,CCTGGCGGACGTGCGCCGCGTCG,GTCGGCGGCCATGCTGCCCCGAG,GCGGGCTGAGGTGCGGCGCCGGG,GGAGGAGGACATGGGGCTCCTGG,CCTGGGGGACAGGCGGTGCCCAG,AGAGGCGGACAGGCTGCGCAAGG,GGTGCCGGACAGGTGGCGCCAGG,CCTGGCGGACCTGGGCCGCCTGT,GCTGGCAGACATGCAGCCCCCAG,TCGTGCGGACATGCCGCACCGGC,CACAGCGGACATGCGGCTGCTGC,GTGGGCTGGCATGCGGAGCCCTG,GATGGGGGACATGCAGCTCCCCG,CGGGGCGGGCAGGCGGCGGCGGC,GCAGGCGGGCATCCGGAGCCAGG,AGAGGCCGAGAGGCGGCGCCCGG,CGGGGCGCTGATGCGGCGCCTGG,CCTGGCGGACAAGCCGCCCCTGT,GTGGGGGGACATGCAGCACCTTG,GGAGGCAGACCCGCGGCGCCGGG,GATTGCGGGCATGCGCCGCCATG,GCAGGCGGACATGCGGGCACCTG,CAAGGCGGAGAAGCGGGGCCTGG,CGTGTCCGACATGCTGCGCCGCG,GCGGGCGGCCATTAGGCGCCAGG,GGCGGCGGAGATGCCGCGGCCCG,GGTCGCAGACATGCGGCTCCAGC,CCTGGCGGCGCTGCGGCGCCGGG,CGGGTCGGACTTGCGGCGCTGGG,GGTGTCGGGCATGCAGCGCCTGG,GGAGGGGGACCTGCGGCCCCGCG,GCTGGTGGACTTGCGGCGGCCAG,CAAAGCGGCCTTGCGGCGCCGCG,CCTGGCCGCCCTGCGGCGCCTCG,CTTGGGGGACATGCAGTGCCAGC,CCAGGCGGCCGGGCGGCGCCAGC,CCTGGACGAGATGCGGCGCCTGG,AAATACGGACATGCAGCGCCGGT,CGAGGAGGACAAGCGGAGCCCTG,AAGGGCAGGCAGGCGGCGCCGGT,GGGGGGGGGCATGCGGCGACGGC,GAAGGCAGACATGCTGGGCCAGT,CCGGCGGGACACGCGGCGCCCGC,CGGGGCGGCCATGCTGGGCCCGG,CGCGGCGGACGGGCGGGGCCCGG,GCTGGCGGAGATGCCCCGCCGGG,GCCGGCGGCCGTGCGGTGCCGGG,CCAGGCGGACCTGCGGCCCCCGA,GCCGGCAGAGATGTGGCGCCCGC,GGTGGCCGACAGGCTGCGCCCGC,AGAGGCGGCCATGTGGCCCCGTG,GAGGGCGGGCCTGCTGCGCCCTG,CCCCTCGGACCTGCGGCGCCACG,CTCGGGGGCCATGCAGCGCCTGG,GGGGGCGGAGAGGGGGCGCCGGC,GCAGGCGGGCAGGCGGCCCCATG,TGTGGCGCACCCGCGGCGCCGGG,CCAGGCGGGGATGCGGGGCCTGC,CCCGGCGGAGAGGCCGCGCCCTG,GCTGGGGGACATGCGGCTGCGGG,GACGGCAGTCATGCTGCGCCCGG,CAAGGCGGACATGCAGCTCTCTG,GGAAGCGGACATGCGACGCGCGC,TCTGGCGGACGTGCTGTGCCAGG,ACTGGCGGACACGGGGCGCGTGG,GCGGGTGGACATGGGGCGCGGGA,AGAGGAGGACATGGGGCGGCAGG,CGAGGCGGAAACGCCGCGCCCAG,CCCAGCGGACATCCGGAGCCCGA,AGGGGCGGCCCGGCGGCGCCGGG,TTTGGTGGACATGGGGTGCCGTG,AGGCGCGGAAATGCGGGGCCGGA,CAAGGCGCACAGGCGGCACCAGT,CCGGGCGGAAGTGCGCCGCCGGC,CAGGGCGGGCCTGCGGCGCCTGC,GGAGGCGGAAGAGCGGCGCCGGT,CGGGCCGGACGTGGGGCGCCTGC,GCAGGCGGACATGCAGAGCATTG,CAGGCCAGACATCCGGCGCCCGG,GACGCCAGACCTGCGGCGCCATG,GTGGGCGGACACGCTGTGCCAGC,GGAGGAGGACAAGCGGGGCCAGG,TCTTGAGGACTTGCGGCGCCGGC,CGAGGCGGACAGGCGTCGCCTGA,GCCGGCGGACATGGCGCGGCGGC,GGCGGGGGACACACGGCGCCTCG,GCAGGCAGGCAGGCGGCGCCCAG,GGAGGCCGAAATGCGGCGGCGGG,TGAGGCTGGCATGCGGGGCCTGA,GCAGACGGACAGGCGGGGCCGGG,TCTGGAGGACATGCGGGTCCCCG,CAAGGCTGACATCTGGCGCCTGG,GGCGGCGGGCAGGGGGCGCCGGG,CCCGGCCGACACGCAGCGCCCGG,TATGGCGGAGATGTGGCCCCCGA,GGACGCGGTGATGCGGCGCCGAG,GCCGGCGGTCAAGCGTCGCCGTG,CCGCGCGGACCTGGGGCGCCGCG,GATGGTGGACATGGGGCTCCCTG,CCTGCCGGACCTGCGGGGCCTGG,CTAGGCGGGGACGCGGCGCCGGC,CCTGGCGCGCAAGCGGCGCCGGC,TCCGGCGGGCAGGCGGCGGCGGC,CGCGGTGGAGATGCGGAGCCGGG,TTGGGTTGACATGCGGCTCCTGA,AGAGGCGGACATGGGGTGCCCAG,CCCGGCGCACACGCGGCTCCCAG,CCGGGCGGAGAAGCGGCGCGAGC,GGAGGAGGAGCTGCGGCGCCTGC,GAGGGCTGACTGGCGGCGCCGCG,AGCGGCCGAGACGCGGCGCCGCG,GGGGAGGGGCATGCGGCGCCAGA,GAGGGAGGACATGCAGTGCCACG,CCCGGGGGACATCCTGCGCCCAG,CTTGGCGGAATTGCAGCGCCCGT,CTGTGAGGACATGGGGCGCCTGG,CCCGGCGGGCAGGCGGCGGCGGG,CCCGGCGGCCCTGCGGAGCCCAG,GGCGGCGGCCATGGGGCGGCACG,ATAAGCTGACATGCGGGGCCGGA,CCGGGAGGACATGAGGAGCCAGG,CGCGGCGGACATGCGCGTCCCCG,TATGGCAGACATTCGGGGCCTGT,CGGGGCGCACACGCGGCGGCTGC,GCTGGCGGAGAGGGGGCGCCTCG,TGGGGAGGACGCGCGGCGCCGGG,TCAGGCTGACGTGCGGCCCCTGG,CTAGGTGGACATGAGGAGCCCAG,GTTGGCGGGCGGGCGGCGCCTGG,GAAGGCGGAAAAGCGGCGCGCAG,GTTGGCGGCCGTGCGGCGCCAGG,AGAGGAGGAACTGCGGCGCCTGG,CATGGCGGTCATGAGGAGCCGAG,AACGGCGGGCAGGTGGCGCCCAG,CGCGGGGGACATGGGGCGCGGCG,GGACGCGGAGCTGCGGCGCCCGC,CGAGGCGGCCCCGCGGCGCCCAG,GTCGGCGGAGCTGCAGCGCCGGG,AGAGGAGGACAGGAGGCGCCCGC,CGCGGGGGACGTGCCGCGCCAGC,ACCGTCGGACATGCGGCTCTGGA,CCGGGCGGGGGTGCGGCGCCGGG,CTGGGCGGGAAGGCGGCGCCCCG,GAGGCCGCACCTGCGGCGCCTGC,CCTGGGGGACATGTGGCGTCTGG,GGGGGTGGACAGGCGGCCCCGGG,CCGGCCGCACATGCGCCGCCTCG,CGGGGAGGGCATGCTGCGCCTGA,TTAGGGGGACATGTGGGGCCAGA,TCAGGCGGAGCTGCGGTGCCGGG,GATGGGGGACAGGCTGCGCCAGC,CCGGGCCGACAGGCGGCGGCTGC,CGAGGCGGAGACGCGGAGCCAGG,AGGGGCGGAGACGCGGGGCCTGA,CCTGGCGGAGATGCTGCTCCAGG,CGGAGCAGACATGCGGCCCCAGT,AGAGGCGGACATGGGGTCCCCAG,GCAGGCGGACATGTGGGTCCCTG,ACCGGCGGGCAGGAGGCGCCCGA,GATGGCTGCCAGGCGGCGCCCCG,CTGGGCTGTCAGGCGGCGCCCAG,GCAGGAGGAGATGCGGCCCCTGG,GGTGGTGGAAATGCGGCTCCTGA,CAGGGAGGGCATGCGGCGCAGTG,CCTGGCGGACACGCGGCAGCTGG,GGGGGCGGCCCTGCGGCGCAGAG,AGGGGCGGAGATGGGGCGGCTGC,GGTGGAAGACATGCAGCGCCAGT,GGCGGCCGACAGGGGGCGCCCTG,GGAGGCGGACGTGGGGGGCCGTG,CAGCGCGGACATCCGCCGCCAGG,CCTGGCACACATGCGGTGCCTGT,CAGCGCGGAGAGGCGGCGCCGGC,CGAGGCGGAGAAGGGGCGCCCAG,GCTGGAGGACATGCTGCGCTCGC,CCGGGCGGACGTGGCGCGCCTTG,GGAGGCCGACATGAGGCACCAGC,AGAGGAGGACATGGGGCGTCCAG,AGAAGCGGACCAGCGGCGCCTGG,TAGGGAGGACATTTGGCGCCCTG,CGCGGCGGACGGGCGGCGGCGGC,TGAAGGGGACATGCGGCGTCAAG,AGGGGCAGACATGGGGCTCCAGA,CGCGGCGGAGAAGCGGGGCCTGG,CCGGGCGGAAGTGAGGCGCCCAG,GACGGCGCAGATGCGGCGTCCCG,TCTGGCTGTCATGCGGGGCCTGA,TATTGCGGGCATGCGCCGCCATG,CGGGGAGGACATGAGGGGCCAGT,CAGGGCGGGCCTGAGGCGCCATG,CCAGACGGTCATGCTGCGCCATG,GTGAGCGGACATGTGGCACCCTG,AAGGGCAGACAGGCGGTGCCCGC,TGGGGCGGACACGGGGCACCCAG,GGCGGCGGACCTGCGGCTCCGGG,CCTGGCTGACATGAGGCGCCCGT,GAAGGCGCACATGCGGCTCCTGC,ACAGGCGGACAGAAGGCGCCAGG,CCGGCCGGACCGGCGGCGCCCGC,CCTGGAGGACATGGAGCGCCGGG,GCAGGCGGCCACGCGGCGCAGGG,GCCGGCGGCCAGGCGGCCCCAGC,TCAGGAGGACATGCTGTGCCTTG,GGGGGCGGCCCTGCGGCGCGGAG,TGCGGAGGACATGGTGCGCCGTG,AGAGGCGGACATGAGGTGCCCAG,CCAGGCGCAGTTGCGGCGCCGCG,ATCAGCGGAGATGCGGCGGCGGC,GAGTGCGGGCATGCGGTGCCAGA,CCCGGAGGACCTGCTGCGCCAGC,AGGAGCGGCCATGCGGCGACCTG,AGAGGCAGACAGGCAGCGCCGGG,CGAGGCGGAAATGGCGCGCCTGC,GAGGGCGGAGAGGAGGCGCCCAG,CCAAGCGCACATGCGGCGGCACG,AAAGGCGGACGGGGGGCGCCAGG,GGCGGCGGCCACGCGGCGCAGCG,GCCGGCGGGCGTGAGGCGCCGGA,AAGCGGGGACAGGCGGCGCCTGG,GGATGCGGCCATGCGGCGGCGCG,CTAGGCGGGCATGCGGGGCTCAG,GCGGCCGGACGTGCGGCCCCCGC,GGGGGCAGACAGGAGGCGCCTGG,GAAGGCGGCCACGCGGCGGCTGA,CGAGGCGGCCACGCGGGGCCGGG,ACTGCCGGACATGCGTCGGCCAG,TCAGGCAGACATGCGGAGGCTGG,TAGGGCGGCCCTGCGCCGCCGGC,CTCGGCAGAAAAGCGGCGCCCGA,CCGGGCCGCCATGCTGCGCCTGT,GGTGGCGGAGATGCTGCGGCCGT,GAGGGCGGAGATGCGGCGCCTGA,TGAGGGGGACATTCGGCCCCAGG,AAAGGCAGACATGCGGCAGCAGC,AGAGGCGGACATTGGGTGCCCAG,GCAGGAGGACATCCGGCACCTGG,CCTGGAGGAGATGCGGCGGCGGC,ACAGCCGCACATGCAGCGCCTGT,GGAGGCGGACTCGCGCCGCCCGT,AAGGGAGGGCATGCAGCGCCCGC,GAAGGCGGATGTGCGGCACCAGA,CCTGGCGGCCCTGCGGCACCTGT,TTAAGTGGACATGAGGCGCCAGA,GAAAGCGGACTTGCGACGCCACG,TGAGCCGGACCTGCGGCACCTGG,GGGGGCGGGCAGGGGGCGCCGGC,GCGGGCGGCCATGCGGCTTCCAG,CGGGGCGGGCGTGCGGCGCATGC,GCTGGCGGGCAGGCGGCGCTGGG,AGAGGTGGACATGCAGCTCCTGG,GCTGACTGACATGCGGCTCCAGG,ACAGGCGGCCATGGGGGGCCGTG,GACGGGGGACATGTGGCCCCAGA,GCCGGCGGACCTGCAGCGGCGGC,ACTGGCGGAGATGCAGCGGCTGC,CCAGGCGCACATGCTGCCCCTGG,GGCGTCGGAAATGCCGCGCCAGT,CAGGGCTGACATGTGGCTCCAGG,AGGGGCGGGGCTGCGGCGCCCCG,ACAGGCGGGCAGGCGGCACCAGT,CCCGGCAGAAATGCAGCGCCGAG,CCTGGGGGACATGCAGCCCCCTG,GTGGGCGGACATGCTGCATCACG,TTCGGCGGAAATTGGGCGCCTGG,TCAGGCGGACATGCGTCCTCTGT,AGGGGCGGACCTGCAGCGCCTGG,GATGGAGGACATGCGGGGCCAGC,ACGGGCGGGCAGGCGGCGCAGTG,CAGGGTGGAAATGCGGCGGCGGG,AAGGGCTGAGATGCGGGGCCAGC,CGGTGCGTACTTGCGGCGCCTGC,CGGGGCGGAACAGCGGCGCCCGA,TTGGGCGCCCGTGCGGCGCCTTG,CCAGGCGGACATGCAGAGCCGGA,GGTGGCGGAGATGCGACGCCCGG,GTTGGAGGACAGGCGGAGCCTGG,CTTGGCGTACATGCTGCTCCACG,TGCGGCGGGCTTGCGGCGCCTGT,GCTGGTGGACATGAGGGGCCAAG,CCAGACGAACATGTGGCGCCCGT,TGAGGCGGCCAAGCGGCTCCGGG,GGCTGCAGACATGGGGCGCCTGG,CACAGCAGACATGCGGTGCCTGT,CGGGGCAGACGAGCGGCGCCCCG,AGAGGCAGAAATGCGGGGCCAGC,CAAGGCGGAGAAGCAGCGCCGGG,GAGGGCGGAGATGAGGCTCCCCG,CCTCGCGGCCAGGCGGCGCCGGC,AGAGGTGCACATGCGTCGCCTGG,CCGGACTGACACGCGGCGCCTGA,CCGGCCGGCCACGCGGCGCCCGG,CCAGGCAGACATGAGGCGTCCGC,CCTGGCGGCCATGCTGCCCCAGT,TGCGGGGGACATCCGCCGCCTGG,GGCGGCGGGCCTGCGGCGGCGGA,GGGGGCGGACAGGCGGGGGCCTG,CCAGGAGGACATGTGGCACCGTG,GTGGGGGGACCTCCGGCGCCAGC,TTCGGCGGACCTGCGGACCCCAG,CAGGGCGCTCCTGCGGCGCCGGC,GGGGGCGGCCGTGCGTCGCCGCG,CGAGGCAGACAAGCGGCGCTCGG,GTGGGCGGGCATGAGGAGCCGTG,GGCGGCGGACCCGCGGAGCCGGG,TCCTGCGGGCATGCGGAGCCCGG,GGCGGCGGGCGCGCGGCGCCCAG,TGGGGCGGAGCTGCGGTGCCCAG,GCGGGCGGTCAGGCGGGGCCTGG,GGAGGTGGACATGGGGCTCCGGC,CAGGGCGTCCATGCGGCACCCGC,ACAGGCGGTCCTGCTGCGCCAGA,CTGCGCGGTCATGCGGAGCCAGC,CTCGGAGGGGATGCGGCGCCAGG,CTGGGCGGGCACGCTGCGCCGCG,GCTGGCGGGCATGCTGCGCGGGA,GCGGGCGGAGCTGCTGCGCCTGG,AAGGGCGGGCAGGCGGCGCTGGG,CGGGGCGGGCAGGCGGAGCCCAG,GCGGGCGGACTGGCGGCGGCGGC,TCAGGCAGACAGGCGCCGCCAGC,CGCGGCGGAGGGGCGGCGCCCCG,GCTGGCGGACTTCCAGCGCCGCG,GGAGGGGGCCATGGGGCGCCGGA,AGAGGCGGAAATGCGCCGCGCGG,GAGGGCAGACATGAGGTGCCTGG,GGGGGCGGACAGGCGCTGCCCTG,GGTGGCAGACACGCGGGGCCTGT,TAAGGCGGATCTGCTGCGCCTGG,GGCGGCGGAGGTGCGGGGCCTGC,GGCTGCGGACCTGCGGCGCCGCG,CGGGGCGGACGTGCGGCGTGCGC,CGTGGAGGACATCCAGCGCCTGG,GGCCGCGGAGATGCGGGGCCAGG,CCAGGAGGAGCTGCGGCGCCAGC,CGTGGCGGCCGTGCGGCGCAAGT,GGAGGGCGACAAGCGGCGCCTGA,GAACGGGGACATGCGGAGCCACG,GAGGGCGGACATCAGGCTCCTTG,TGCGGCGGACACGCGACCCCGGC,AGCAGCTGACATGCGGCTCCCTG,GGCGGCGGCCCTGCGGCTCCCGC,CTGGGGGGATGTGCGGCGCCCAG,GTAGCCTGACATGCGGTGCCCTG,CACGGCGAACATGCGACCCCAGT,GCGGGCGGACGGGCGGCGCAGGA,GCGGGGGGACGTGCCGCGCCAGG,GTCAGCGGACCTGCGGAGCCAGC,GCTGGAGGAGATGCAGCGCCAGC,ATGGGTGGGCATCCGGCGCCCAG,CGGGGCGGACGGGCGGGGCCTGC,CGCGGCGGACGAGCGGGGCCCGG,TCCGACGGGCAGGCGGCGCCCGG,GGGGGCGGTCCGGCGGCGCCGGC,GGGGGCGGGAATGGGGCGCCGCG,CCAGGCAGACACGCGGAGCCAAG,GAAGGAGGACATGAGGCGCAGGA,GCGGGCGGACAAGCGGCCGCCCG,GGCGGCGGACTCGCGGCGGCAGC,AGGGGCGGACGGGCGGCTCCCGG,TATGGCGGACCGGCGGCGCGCGT,CAGGGCGGCCAGGCGGCGGCAGG,TGAGCCTGACATGCGGAGCCAGC,TAAGGCGGTCCTGCGTCGCCCGG,TGCGGCTGACATGCGGAGGCTGG,CCCGGCGGGCAGGCAGCGCCGTG,CTGGGGGGACATGCGCTGCCTGG,GGAAGCGGACCTGCGGGGCCCTG,CCCCGGGGACATGCAGCGCCGAG,CGGCGCGGATATGCGGCGCGGGC,CGTGGCTGACAGGAGGCGCCGGA,CCTAGCGGGCATGCAGCGCCTTG,TGGGGCGGAAGTGCGGGGCCTGG,CCAGGCAGACAGTCGGCGCCTTG,GAGGGCGGACACGTGGCTCCGGG,GTTTGCAGACATGAGGCGCCCTG,GGCGGCCGACATGGGGCGGCCAG,CTTGGCTGAGAAGCGGCGCCAGG,ACGGGCTGGCAGGCGGCGCCGGC,CGAGGCGGACGTGCGGGGGCGGG,CTGGGTGGACATGGGGAGCCTGG,GCGGGCGGGCAGGCGGCCCCAGG,TAGGGCGGGCATGGGGCCCCAGC,CCAGGCGGAAAAGGGGCGCCCAG,CACCGCGGAGACGCGGCGCCTGC,CGAGGCGGGCGCGCGGCGCCGGC,GCCGGCGGGCAGGCGGCGGCGGC,ACCGGCGGCGCTGCGGCGCCCGG,GCGAGCGGACATGCAGCGCCAGC,CCGGGCGGACGCGCGGAGCCGAG,CCAGCCAGACATGCGGCCCCTGG,GCTGGCTGACAGGCGGCCCCCGT,GGAGGCTGCCATGCTGCGCCCGC,CGTGGCGGACCTGCGGGGCTAAG,TAGGGTGGACGTGAGGCGCCTGT,GCCGGCGGAGATGGGGGGCCGAG,CACGTCGGCCATGCGGCGCCGCG,AGGGGCGGAGGGGCGGCGCCCGA,CCAGGCGGACAGGCTGCCCCGGC,GGGGGCGGACCCGCGGCGCCAGC,GTGGCTGGACATGCGGAGCCTCG,CAGGGCGGGCATGCTGCGCTGCG,GAGGCCGCACTTGCGGCGCCTTG,CGCGCCGGGCATGCGGGGCCCAG,ATAGGAGGACATGAGGCACCAGG,TGTGGCGGACTTGCGGAGCAGCG,CCAGGTGGACATCAGGCGCCAGG,GGGGGCGGACATGCTGGTCCATG,AAAGGTGGACATGCTGCCCCAGG,TCCGGCGGGGACGCGGCGCCCCG,AGAGGGGGAAATGCGGCGGCGGC,CCTGGAGGAGATGCGGCGCCTAG,TCGGGCGGGGAAGCGGCGCCGGC,CACGGCGGACGCGCGGTGCCAGC,GGTGGCGGAGATGCAGTGCCAGG,CCTGGTGGATATGCCGCGCCGAG,GAGGACGGCCGTGCGGCGCCAGG,GACGGCGGAGAGGCGGCGGCGGG,TCAGGCGGACATGGGGAGGCTGG,CACGGCGGTCAGGCGGCGGCGCG,GGGGGCGGACACCCGGCACCGCG,GCAGGCGGCCATGCGCAGCCTGG,GAGGAAGGACACGCGGCGCCGGG,TTAGTCGGGCATGTGGCGCCAGC,CAAGGCGGCCCTGCAGCGCCAGC,CCAGGCGGACACGCAGCGGCCGG,TGGGCAGGACCTGCGGCGCCGGG,GCACTCGGACCTGCGGCGCCTGA,GAAGGCGGAAATCGGGCGCCGGG,AGAGGCGGACAGGGGGCTCCGGG,ATGGGCGGTCACGCGGCGCTGGG,GGAGGCTGACAGGCGGCCCCAGA,GCCGGCGGACAGGTGGAGCCTGA,CCCGGGGGACCCGCGGCGCCCGA,TGTGGAGCACATGTGGCGCCAGC,CGGTGAGGACAGGCGGCGCCCGG,AGGGCCGGAAAGGCGGCGCCTGT,CGCGGGGAACATGCGGCTCCGGC,GAGGGCGGACATGCCCTGCCTTG,TGGGGCGGGCAGGCGGCGCAGGC,GATGGCGGACCGGCGGCGGCAGC,AGAGGCAGGCATGGGGCGCCACG,CGAGGAGGACATGCGGCACCCTG,GGAGGCGGCCACGCGGCGCGAGG,CGGGGAGGACAGGCGGCGGCAAG,TGAGCCGGACTTGCAGCGCCTGA,CCCTGCTGACATGCGGCGGCTGC,GCAGGCGGAGACGCGGCGGCAGC,GCGGGCGGAGATGCTGCGTCATG,CCCGGCGCACAGGCGGGGCCCCG,CCTGGCGGACGCGAGGCGCCGGC,GGGGGCGGACATGGGGAGCCAGG,GCTGGCGCACCTGCGGCGCCTGA,AAAGGTGGACAGGAGGCGCCCTG,TCCGGGGGACATGGGGAGCCAGG,CCTGGAGGACAGGCGGGGCCAGA,GCAGGCGGAGACGCGGCGCCCGG,TCAGGCGGACCTGCGGCTCCAAG,AACGGCCGAGCTGCGGCGCCTAG,CTCGGAGGACATGGGGCGCCTGG,AGAGGAGGCCATGCGGCGGCTGC,GCGGGCGGAGAAGCGGCGGCGGC,GTCGGCGGACACCCGGCTCCGCG,TGATGCGTCCATGCGGCGCCAAG,ACCGACGTACTTGCGGCGCCTGC,CCCGGCGGACAAGCGGCGGGACG,GGAGGCGGTGAGGCGGCGCCAGT,TCCGGCCGCCAAGCGGCGCCCGC,AAAGGGGACCATGCGGCGCCTGA,GCCGGCGGACGCGCGGCGCTGGG,CCTGGCGGCCATGCGGGGACCGT,ACAGGAGGACAAGCGGCGGCGGC,AATGAGGGACATGAGGCGCCGAG,CCGGGCGGAGAAGCGGCGTCGGC,CTCGGAGGACACGCAGCGCCTGT,CGGGGCGGGGACGCGGCGCCCCG,AATGGCGGAGACGCGGCGGCTGC,CCAGGCGGACACGAGGCGCGGTG,CGTGGGGGACACGCGGGGCCGGG,CAAGGCGGAGAAGCGGCTCCCGG,CGGGGCGGACAGGCCGCTCCGAG,GCCGGCGGAGCTGCGGCGTCGGA,AGCGGCGGGACTGCGGCGCCGCG,GAGGGCGGTCCCGCGGCGCCCCG,CCAGGCGGACCTGCAGCCCCCGA,CTGGGAGAACATCCGGCGCCCTG,CCAGGTGGACTTGAGGCGCCAGC,TCGGGTGGACATGCAGCGGCTGA,TGGGGCTGGCCTGCGGCGCCTGG,AGAGGCGGACACGCGGCGCGCAG,GGCGGCGGACGGGCGGCGGCGGC,CTGGGCGGACCCGCGGCTCCGGC,GGCGGCGGGCATCCCGCGCCGGC,GAAGGCGGACATGCGGCGCCAGG,GCGGGCGGAGTTGGGGCGCCGGC,CCCGGCGAAGATGCGTCGCCTGA,GCCGGCGGGGAGGCGGCGCCGGG,GCAGGGGGACAGGCGGGGCCGTG,GAGGGCGGACGAGGGGCGCCGGG,AGGGGAGGACATGAGGCTCCAGC,TTTGGGGAACCTGCGGCGCCTGG,GGGGGGGGACGTGCCGCGCCAGG,CCGGCCGGACATGCGGGGCAGGC,TGCGGAGGACATGCGGCTGCATG,GGCGGCGGGCAGGCGGCGCGCTG,ACCTGCGGAAACGCGGCGCCTCG,TAGGGCAGTCATGCGGGGCCCTG,AGGGGCAGACATGCTGCTCCTGT,CTGGGCAAACATGAGGCGCCAGG,GCTGGCGGCCATGCAGCGGCGGT,GGCGGCGCACGTGCGGCGGCGGC,TGAGGAGGACATGCAGAGCCACG,CAAGGCGGTCCTGCGGCCCCGCG,CCAGGCGGACAGGCCGCGCCTTG,CTGGGGTGACATGCGGAGCCTGG,GTCGGCAGCCATTCGGCGCCTGC,GGCGGCGGAGGTGCGGCCCCGGG,GCGGGCGGGCGGGCGGCGCCGGG"
    testCases()